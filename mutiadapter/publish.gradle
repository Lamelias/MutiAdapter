task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    // this is new
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompiler.classpath
        }
    }
    // end of new
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}


// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {

    publishing {

        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // Adds javadocs and sources as separate jars.
                artifact androidJavadocsJar
                artifact androidSourcesJar

                // You can then customize attributes of the publication as shown below.
//                groupId = 'com.imreal.mutiadapter'
//                artifactId = 'core'
//                version = '1.0'

                groupId = "${_groupId}"
                artifactId = "${_artifactId_release}"
                version = "${_version}"
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                // Adds javadocs and sources as separate jars.
                artifact androidJavadocsJar
                artifact androidSourcesJar

//                groupId = 'com.imreal.mutiadapter'
//                artifactId = 'core-debug'
//                version = '1.0'
                groupId = "${_groupId}"
                artifactId = "${_artifactId_debug}"
                version = "${_version}"
            }
        }

        repositories {
            mavenLocal()
        }

    }

}